{"version":3,"sources":["api/apiFunctions.js","Components/FoodCard.js","utils/fuzzySearching.js","Components/CardContainer.js","Components/Menus.js","Components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["getTodayFoods","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","res","json","wrap","_context","prev","next","console","log","fetch","headers","accepts","sent","abrupt","stop","apply","this","arguments","FoodCard","food","react_default","createElement","className","toString","defaultProps","levenshteinDistance","require","CardContainer","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","buildMenu","bind","assertThisInitialized","nextProps","menu","setState","searchText","renderMenu","Menu","slice","arr","cutoffScore","scores","map","s","name","score","filter","sort","b","fuzzySearch","children","forEach","push","FoodCard_FoodCard","key","Component","Start","End","Name","Menus","setMenu","newProps","foods","_this2","_this$state","Grid_default","container","spacing","item","xs","Button_default","color","onClick","CardContainer_CardContainer","SearchAppBar","setSearchText","classes","root","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","aria-label","Menu_default","Typography_default","title","variant","noWrap","grow","search","searchIcon","Search_default","InputBase_default","onChange","e","target","value","placeholder","inputRoot","input","inputInput","withStyles","theme","width","flexGrow","marginLeft","marginRight","defineProperty","display","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","unit","height","pointerEvents","alignItems","justifyContent","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","App","setTodayFoods","text","NavBar","Menus_Menus","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb6937e8.chunk.js","sourcesContent":["const apiURL = \"http://www.dh-rest-service.herokuapp.com\";\nexport const getTodayFoods = async () => {\n  console.log(\"hitting api\");\n  const res = await fetch(\"/api/today\", {\n    headers: {\n      accepts: \"application/json\"\n    }\n  });\n  console.log(\"res\", res);\n  const json = await res.json();\n  console.log(json);\n  return json;\n};\n","import React from 'react';\nimport './FoodCard.css';\nimport PropTypes from 'prop-types';\n\nconst FoodCard = ({ food }) => (\n  <div className=\"card\">\n    <div className=\"container\">{food.toString()}</div>\n  </div>\n);\n\nFoodCard.propTypes = {\n  food: PropTypes.string,\n};\n\nFoodCard.defaultProps = {\n  food: 'Food',\n};\n\nexport { FoodCard as default };\n","const levenshteinDistance = require('js-levenshtein');\n\nconst fuzzySearch = (searchText, arr, cutoffScore) => {\n  let scores = arr.map((s) => {\n    const score = levenshteinDistance(searchText, s, 12);\n    return {\n      name: s,\n      score,\n    };\n  });\n\n  scores = scores.filter(food => food.score < cutoffScore);\n  scores = scores.sort((a, b) => a.score > b.score);\n\n  return scores.map(score => score.name);\n};\nexport { levenshteinDistance, fuzzySearch as default };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FoodCard from './FoodCard';\nimport fuzzySearch from '../utils/fuzzySearching';\n\nclass CardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.buildMenu = this.buildMenu.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props !== nextProps) {\n      const { menu } = nextProps;\n      this.setState({ menu });\n    }\n  }\n\n  buildMenu() {\n    const { menu } = this.state;\n    const { searchText } = this.props;\n    let renderMenu = menu.Menu.slice();\n    if (searchText !== '') {\n      renderMenu = fuzzySearch(searchText, renderMenu, 12);\n      console.log('renderMenu', renderMenu);\n    }\n    const children = [];\n    renderMenu.forEach((food) => {\n      children.push(<FoodCard key={food.toString()} food={food} />);\n    });\n    return children;\n  }\n\n  render() {\n    const { menu } = this.state;\n    return <div>{menu ? this.buildMenu() : null}</div>;\n  }\n}\n\nCardContainer.propTypes = {\n  menu: PropTypes.shape({\n    Name: PropTypes.string,\n    Start: PropTypes.string,\n    End: PropTypes.string,\n    Menu: PropTypes.array,\n  }),\n  searchText: PropTypes.string,\n};\n\nCardContainer.defaultProps = {\n  menu: {\n    Start: '0',\n    End: '0',\n    Menu: ['Food'],\n    Name: 'Meal',\n  },\n  searchText: '',\n};\n\nexport { CardContainer as default };\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport CardContainer from './CardContainer';\nimport fuzzySearch from '../utils/fuzzySearching';\n\nclass Menus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.setMenu = this.setMenu.bind(this);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (this.props !== newProps) {\n      const { foods } = newProps;\n      this.setState({ foods });\n      console.log('foods: ', foods);\n    }\n  }\n\n  setMenu(menu) {\n    console.log('menu: ', menu);\n    this.setState({ menu });\n  }\n\n  render() {\n    const { foods, menu } = this.state;\n    const { searchText } = this.props;\n    return (\n      <Grid container spacing={16}>\n        <Grid item xs={4}>\n          <div>\n            {foods\n              ? foods.map(food => (\n                <div>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => this.setMenu(food)}\n                      key={food.Name}\n                    >\n                      {food.Name}\n                    </Button>\n                    <br />\n                  </div>\n              ))\n              : null}\n          </div>\n          <Button color=\"primary\">Favorites</Button>\n        </Grid>\n        <Grid item xs={8}>\n          <CardContainer searchText={searchText} menu={menu} />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport { Menus as default };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\nclass SearchAppBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  setSearchText(searchText) {\n    const { setSearchText } = this.props;\n    setSearchText(searchText);\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              className={classes.title}\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n            >\n              Dining Hall Guide\n            </Typography>\n            <div className={classes.grow} />\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                onChange={e => this.setSearchText(e.target.value)}\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nSearchAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  setSearchText: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(SearchAppBar);\n","import React, { Component } from 'react';\nimport './App.css';\nimport { getTodayFoods } from './api/apiFunctions';\nimport Menus from './Components/Menus';\nimport NavBar from './Components/NavBar';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.setTodayFoods = this.setTodayFoods.bind(this);\n    this.setSearchText = this.setSearchText.bind(this);\n  }\n\n  componentDidMount() {\n    this.setTodayFoods();\n  }\n\n  async setTodayFoods() {\n    const foods = await getTodayFoods();\n    this.setState({ foods });\n  }\n\n  setSearchText(text) {\n    this.setState({ searchText: text });\n  }\n\n  render() {\n    const { foods, searchText } = this.state;\n    return (\n      <div className=\"App\">\n        <NavBar setSearchText={this.setSearchText} />\n        <Menus searchText={searchText} foods={foods} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}